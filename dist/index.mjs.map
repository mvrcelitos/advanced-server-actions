{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { ActionInternals, IServerAction, ProcedureInternals } from \"./types\";\r\n\r\nclass ServerProcedure<TInternals extends ProcedureInternals> {\r\n  private declare $internals: TInternals;\r\n\r\n  constructor(internals: TInternals) {\r\n    this.$internals = internals;\r\n  }\r\n\r\n  public handler<TOutput>(fn: ({ ctx }: { ctx: TInternals[\"context\"] }) => Promise<TOutput> | TOutput) {\r\n    this.$internals.procedures?.push(fn);\r\n    return this as ServerProcedure<{\r\n      context: TOutput;\r\n      procedures: TInternals[\"procedures\"];\r\n    }>;\r\n    // return new ServerProcedure<{ context: TOutput; procedures: TInternals[\"procedures\"] }>({\r\n    //   ...this.$internals,\r\n    //   context: this.$internals.context as TOutput,\r\n    // });\r\n  }\r\n\r\n  public createServerAction() {\r\n    return new ServerAction({\r\n      input: undefined,\r\n      output: undefined,\r\n      context: this.$internals.context as TInternals[\"context\"],\r\n      procedures: this.$internals.procedures,\r\n    });\r\n  }\r\n}\r\n\r\nclass ServerAction<TInternals extends ActionInternals> implements IServerAction<TInternals> {\r\n  private declare $internals: TInternals;\r\n\r\n  constructor(internals: TInternals) {\r\n    this.$internals = internals;\r\n  }\r\n\r\n  public input<TInput = any, TOutput = unknown>(\r\n    fn: (input: TInput, args: { ctx: TInternals[\"context\"] }) => Promise<TOutput> | TOutput,\r\n  ) {\r\n    this.$internals.input = fn;\r\n    return this as ServerAction<\r\n      Omit<TInternals, \"input\"> & {\r\n        input: (input: TInput, args: { ctx: TInternals[\"context\"] }) => Promise<TOutput> | TOutput;\r\n      }\r\n    >;\r\n  }\r\n\r\n  public handler<TOutput = unknown>(\r\n    fn: ({\r\n      ctx,\r\n      input,\r\n    }: {\r\n      ctx: TInternals[\"context\"];\r\n      input: TInternals[\"input\"] extends Function ? Awaited<ReturnType<TInternals[\"input\"]>> : undefined;\r\n    }) => Promise<TOutput> | TOutput,\r\n  ) {\r\n    const internals = this.$internals;\r\n\r\n    type Input = TInternals[\"input\"] extends Function\r\n      ? Parameters<TInternals[\"input\"]>[0] extends undefined\r\n        ? void\r\n        : Parameters<TInternals[\"input\"]>[0]\r\n      : void;\r\n    type Output = TInternals[\"input\"] extends Function ? Awaited<ReturnType<TInternals[\"input\"]>> : undefined;\r\n\r\n    return async function (input: Input): Promise<[TOutput, null] | [null, Error]> {\r\n      let ctx: unknown = undefined;\r\n\r\n      try {\r\n        // Run all the procedures\r\n        for (const procedure of internals.procedures) {\r\n          ctx = await procedure({ ctx });\r\n        }\r\n\r\n        await internals.onStart?.({ ctx });\r\n\r\n        // Parse the data\r\n        const data = (\r\n          internals?.input instanceof Function ? await internals.input?.(input, { ctx }) : undefined\r\n        ) as Output;\r\n\r\n        // The function passed by the user to be the handled\r\n        const response = await fn({ ctx, input: data });\r\n\r\n        await internals.onSuccess?.({ ctx });\r\n        return [response, null];\r\n      } catch (error) {\r\n        await internals.onError?.({ ctx, error });\r\n        return [null, error instanceof Error ? error : new Error(\"Internal error\", { cause: error })];\r\n      } finally {\r\n        await internals.onComplete?.({ ctx });\r\n      }\r\n    };\r\n  }\r\n\r\n  // Event handlers\r\n  public onStart(fn: ActionInternals[\"onStart\"]) {\r\n    this.$internals.onStart = fn;\r\n    return this as ServerAction<Omit<TInternals, \"onStart\"> & { onStart: typeof fn }>;\r\n  }\r\n\r\n  public onSuccess(fn: ActionInternals[\"onSuccess\"]) {\r\n    this.$internals.onSuccess = fn;\r\n    return this as ServerAction<Omit<TInternals, \"onSuccess\"> & { onSuccess: typeof fn }>;\r\n  }\r\n\r\n  public onComplete(fn: ActionInternals[\"onComplete\"]) {\r\n    this.$internals.onComplete = fn;\r\n    return this as ServerAction<Omit<TInternals, \"onComplete\"> & { onComplete: typeof fn }>;\r\n  }\r\n\r\n  public onError(fn: ActionInternals[\"onError\"]) {\r\n    this.$internals.onError = fn;\r\n    return this as ServerAction<Omit<TInternals, \"onError\"> & { onError: typeof fn }>;\r\n  }\r\n\r\n  public onInputParseError(fn: ActionInternals[\"onInputParseError\"]) {\r\n    this.$internals.onInputParseError = fn;\r\n    return this as ServerAction<Omit<TInternals, \"onInputParseError\"> & { onInputParseError: typeof fn }>;\r\n  }\r\n}\r\n\r\nexport function createServerProcedure() {\r\n  return new ServerProcedure({ procedures: [], context: undefined });\r\n}\r\n\r\nexport function createServerAction() {\r\n  return new ServerAction({\r\n    input: undefined,\r\n    output: undefined,\r\n    context: undefined,\r\n    procedures: [],\r\n  });\r\n}\r\n\r\nconst createServerFunctions = {\r\n  createServerAction,\r\n  createServerProcedure,\r\n};\r\n\r\nexport default createServerFunctions;\r\n"],"mappings":";AAEA,IAAM,kBAAN,MAA6D;AAAA,EAG3D,YAAY,WAAuB;AACjC,SAAK,aAAa;AAAA,EACpB;AAAA,EAEO,QAAiB,IAA6E;AACnG,SAAK,WAAW,YAAY,KAAK,EAAE;AACnC,WAAO;AAAA,EAQT;AAAA,EAEO,qBAAqB;AAC1B,WAAO,IAAI,aAAa;AAAA,MACtB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS,KAAK,WAAW;AAAA,MACzB,YAAY,KAAK,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH;AACF;AAEA,IAAM,eAAN,MAA4F;AAAA,EAG1F,YAAY,WAAuB;AACjC,SAAK,aAAa;AAAA,EACpB;AAAA,EAEO,MACL,IACA;AACA,SAAK,WAAW,QAAQ;AACxB,WAAO;AAAA,EAKT;AAAA,EAEO,QACL,IAOA;AACA,UAAM,YAAY,KAAK;AASvB,WAAO,eAAgB,OAAwD;AAC7E,UAAI,MAAe;AAEnB,UAAI;AAEF,mBAAW,aAAa,UAAU,YAAY;AAC5C,gBAAM,MAAM,UAAU,EAAE,IAAI,CAAC;AAAA,QAC/B;AAEA,cAAM,UAAU,UAAU,EAAE,IAAI,CAAC;AAGjC,cAAM,OACJ,WAAW,iBAAiB,WAAW,MAAM,UAAU,QAAQ,OAAO,EAAE,IAAI,CAAC,IAAI;AAInF,cAAM,WAAW,MAAM,GAAG,EAAE,KAAK,OAAO,KAAK,CAAC;AAE9C,cAAM,UAAU,YAAY,EAAE,IAAI,CAAC;AACnC,eAAO,CAAC,UAAU,IAAI;AAAA,MACxB,SAAS,OAAO;AACd,cAAM,UAAU,UAAU,EAAE,KAAK,MAAM,CAAC;AACxC,eAAO,CAAC,MAAM,iBAAiB,QAAQ,QAAQ,IAAI,MAAM,kBAAkB,EAAE,OAAO,MAAM,CAAC,CAAC;AAAA,MAC9F,UAAE;AACA,cAAM,UAAU,aAAa,EAAE,IAAI,CAAC;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGO,QAAQ,IAAgC;AAC7C,SAAK,WAAW,UAAU;AAC1B,WAAO;AAAA,EACT;AAAA,EAEO,UAAU,IAAkC;AACjD,SAAK,WAAW,YAAY;AAC5B,WAAO;AAAA,EACT;AAAA,EAEO,WAAW,IAAmC;AACnD,SAAK,WAAW,aAAa;AAC7B,WAAO;AAAA,EACT;AAAA,EAEO,QAAQ,IAAgC;AAC7C,SAAK,WAAW,UAAU;AAC1B,WAAO;AAAA,EACT;AAAA,EAEO,kBAAkB,IAA0C;AACjE,SAAK,WAAW,oBAAoB;AACpC,WAAO;AAAA,EACT;AACF;AAEO,SAAS,wBAAwB;AACtC,SAAO,IAAI,gBAAgB,EAAE,YAAY,CAAC,GAAG,SAAS,OAAU,CAAC;AACnE;AAEO,SAAS,qBAAqB;AACnC,SAAO,IAAI,aAAa;AAAA,IACtB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,EACf,CAAC;AACH;","names":[]}